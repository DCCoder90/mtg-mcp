name: Build and Release

on:
  release:
    types: [created]

jobs:
  build:
    name: Build Release
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - goos: windows
            goarch: amd64
            output: mtg-mcp-windows-amd64.exe
          - goos: windows
            goarch: arm64
            output: mtg-mcp-windows-arm64.exe
          - goos: linux
            goarch: amd64
            output: mtg-mcp-linux-amd64
          - goos: linux
            goarch: arm64
            output: mtg-mcp-linux-arm64

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.24'

      - name: Install dependencies
        run: go mod tidy
        working-directory: ./src

      - name: Build binary
        env:
          GOOS: ${{ matrix.goos }}
          GOARCH: ${{ matrix.goarch }}
        run: |
          go build -v -ldflags="-s -w" -o ${{ matrix.output }} .
        working-directory: ./src

      - name: Create archive
        run: |
          cd src
          if [ "${{ matrix.goos }}" = "windows" ]; then
            zip ../mtg-mcp-${{ matrix.goos }}-${{ matrix.goarch }}.zip ${{ matrix.output }}
          else
            tar -czf ../mtg-mcp-${{ matrix.goos }}-${{ matrix.goarch }}.tar.gz ${{ matrix.output }}
          fi

      - name: Upload release asset (Windows)
        if: matrix.goos == 'windows'
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ github.event.release.upload_url }}
          asset_path: ./mtg-mcp-${{ matrix.goos }}-${{ matrix.goarch }}.zip
          asset_name: mtg-mcp-${{ matrix.goos }}-${{ matrix.goarch }}.zip
          asset_content_type: application/zip

      - name: Upload release asset (Linux)
        if: matrix.goos != 'windows'
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ github.event.release.upload_url }}
          asset_path: ./mtg-mcp-${{ matrix.goos }}-${{ matrix.goarch }}.tar.gz
          asset_name: mtg-mcp-${{ matrix.goos }}-${{ matrix.goarch }}.tar.gz
          asset_content_type: application/gzip

  docker:
    name: Build and Push Docker Images
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Checkout
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8

      - name: Set up QEMU
        uses: docker/setup-qemu-action@29109295f81e9208d7d86ff1c6c12d2833863392

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@e468171a9de216ec08956ac3ada2f0791b6bd435

      - name: Get version
        id: version
        run: |
          VERSION=${GITHUB_REF#refs/tags/}
          echo "version=${VERSION}" >> $GITHUB_OUTPUT
          echo "Version: ${VERSION}"

      - name: Get lowercased owner
        id: owner
        run: |
          echo "name=$(echo ${{ github.repository_owner }} | tr '[:upper:]' '[:lower:]')" >> $GITHUB_OUTPUT

      - name: Log in to Docker Hub
        uses: docker/login-action@5e57cd118135c172c3672efd75eb46360885c0ef
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@5e57cd118135c172c3672efd75eb46360885c0ef
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@263435318d21b8e681c14492fe198d362a7d2c83
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: |
            dccoder/mtg-mcp:${{ steps.version.outputs.version }}
            ghcr.io/${{ steps.owner.outputs.name }}/mtg-mcp:${{ steps.version.outputs.version }}

      - name: Build and push Latest Docker image
        uses: docker/build-push-action@263435318d21b8e681c14492fe198d362a7d2c83
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: |
            dccoder/mtg-mcp:latest
            ghcr.io/${{ steps.owner.outputs.name }}/mtg-mcp:latest